```{python}
#| include: false
import pandas as pd
from datetime import date
from tabulate import tabulate
from IPython.display import display, HTML, Image
import os
import ipywidgets as widgets
from pythonFunctions import generalFunctions as gf

sites = ["NRS11"]

# input table for standard text
inputDir = os.path.normpath(os.path.join(os.getcwd(), "resources"))
metaFile = os.path.join(inputDir, "ONMSSound_IndicatorCategories.xlsx")
metadata = pd.read_excel(metaFile, sheet_name="Summary", header=1)
lookup = [row for index, row in metadata.iterrows() if row.iloc[4] in sites]
dicts = [l.to_dict() for l in lookup]
df = pd.read_excel(metaFile, sheet_name="Standard Report Text", engine_kwargs={'keep_links': True})
standardTextDict = pd.Series(df.iloc[:, 3].values, index = df.iloc[:, 1]).to_dict()

for key in standardTextDict:
    value = standardTextDict[key]
    if isinstance(value, str):  # Only process if it's a string
        while "**" in value:
            value = value.replace("**", "<b>", 1)
            value = value.replace("**", "</b>", 1)

# input table for site information
df1 = pd.read_excel(metaFile, sheet_name="CB")
for col in df1.select_dtypes(include=["datetime64[ns]"]).columns:
    df1[col] = df1[col].dt.date  # or .dt.strftime('%Y-%m-%d') for custom format
summaryTable = [list(df1.columns.values)]  # keeps column names as-is, with spaces
summaryTable.extend(df1.values.tolist())

headerSizes = ["200","700","200","200","200","200","200","100","100","150","100"]
tableWidth = sum(int(x) for x in headerSizes)
htmlTable = tabulate(summaryTable, tablefmt="unsafehtml")
htmlTable = htmlTable.replace('<table>', f'<table style="width:100% ;overflow-x: auto; display: block;">')
htmlTable = htmlTable.replace("<td>", "<th>", 11)
htmlTable = htmlTable.replace("</td>", "</th>", 11)
headerLocations = [i for i in range(len(htmlTable)) if htmlTable.startswith("<th>", i)]

for i in range(10, -1, -1):
  htmlTable = htmlTable[:headerLocations[i]] + f'<th style="width:{headerSizes[i]}px">' + htmlTable[headerLocations[i]+4:]

#df1 = pd.read_excel(metaFile, sheet_name="CB")
#summaryTable = [list(df1.columns.values)]
#for i in range(len(summaryTable[0])):
    #summaryTable[0][i] = summaryTable[0][i].replace(" ", ".")
#summaryTable.extend(df1.values.tolist())
#htmlTable = tabulate(summaryTable, tablefmt="html")
```

---
title: "Cordell Bank National Marine Sanctuary Soundscape Report"
date: "today"
output: 
  html_document: 
    fig_caption: true
editor_options: 
  markdown: 
    wrap: 72
---

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Where are we listening?
```{python}
#| echo: false
display(HTML(standardTextDict["CBNMS"]))
```

### Ocean sound monitoring sites
```{python}
#| echo: false
display(HTML(htmlTable))
```
:::
::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Annual soundscape conditions
```{python}
#| echo: false
display(HTML(standardTextDict["What are the latest conditions in ocean sound?"]))
display(HTML(gf.makeButtons(sites, "plot_***_YearSPL.jpg", "YearSPL")))
```
:::
::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Seasonal soundscape conditions
```{python}
#| echo: false
display(HTML(standardTextDict["Soundscape Overview"]))
display(HTML(gf.makeButtons(sites, "plot_***_SeasonalSPL.jpg", "Seasons")))
infoHtml = f'''
                <button style="background-color: #FFFFFF;" onclick="document.getElementById(&#39;infoModal&#39;).showModal()">How was this calculated?</button>
            <dialog id="infoModal">
                <p>{standardTextDict['How was this calculated?']}</p>
                <button style="background-color: #FFFFFF;" onclick="document.getElementById(&#39;infoModal&#39;).close()">
                    Close
                </button>
            </dialog>
                <button style="background-color: #FFFFFF;" onclick="document.getElementById(&#39;infoModal2&#39;).showModal()">
                    How does my sanctuary compare?
                </button>
            <dialog id="infoModal2">
                <p>{standardTextDict['How does my sanctuary compare?']}</p>
                <button style="background-color: #FFFFFF;" onclick="document.getElementById(&#39;infoModal2&#39;).close()">
                    Close
                </button>
            </dialog>
'''
display(HTML(infoHtml))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Daily soundscape conditions
```{python}
#| echo: false
#display(HTML(standardTextDict["What are the latest conditions in ocean sound?"]))
#display(HTML(gf.makeImage("DAILY_MILLIDEC_MinRes_psd.png", "Spectrogram")))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Ocean sound indicators
```{python}
#| echo: false
display(HTML(standardTextDict["Indicator description"]))
```
### Tracking low frequency ocean noise
```{python}
#| echo: false
display(HTML(standardTextDict["Above year 1"])) 
display(HTML(gf.makeButtons(sites, "plot_***_year1above.jpg", "dBabove")))
display(HTML(gf.makeButtons(sites, "plot_***_year1Pctabove.jpg", "dBabove"))) 
```
:::

