```{python}
#| include: false
import pandas as pd
from datetime import date
from tabulate import tabulate
from IPython.display import display, HTML, Image
import os
import ipywidgets as widgets
from pythonFunctions import generalFunctions as gf

sites = ["SB01", "SB03"]
  
# input table for standard text
inputDir = os.path.normpath(os.path.join(os.getcwd(), "resources"))
metaFile = os.path.join(inputDir, "ONMSSound_IndicatorCategories.xlsx")
metadata = pd.read_excel(metaFile, sheet_name="Summary", header=1)
lookup = [row for index, row in metadata.iterrows() if row.iloc[4] in sites]
dicts = [l.to_dict() for l in lookup]
df = pd.read_excel(metaFile, sheet_name="Standard Report Text", engine_kwargs={'keep_links': True})

standardTextDict = pd.Series(df.iloc[:, 3].values, index = df.iloc[:, 1]).to_dict()
for key in standardTextDict:
    value = standardTextDict[key]
    if isinstance(value, str):  # Only process if it's a string
        while "**" in value:
            value = value.replace("**", "<b>", 1)
            value = value.replace("**", "</b>", 1)

# input table for site information
df1 = pd.read_excel(metaFile, sheet_name="SB")
for col in df1.select_dtypes(include=["datetime64[ns]"]).columns:
    df1[col] = df1[col].dt.date  # or .dt.strftime('%Y-%m-%d') for custom format
    
summaryTable = [list(df1.columns.values)]  # keeps column names as-is, with spaces
summaryTable.extend(df1.values.tolist())
htmlTable = '<div style="overflow-x: scroll;">' + tabulate(summaryTable, tablefmt="unsafehtml") + '</div>'
headerLocations = [i for i in range(len(htmlTable)) if htmlTable.startswith("<th>", i)]
headerSizes = ["200","200","200","200","200","200","200","200","200","200","200"]
for i in range(len(headerLocations)):
  htmlTable = htmlTable[:headerLocations[i]] + f'<th style="width:{headerSizes[i]}px"' + htmlTable[headerLocations[i]+4:]
```

---
title: "Stellwagen Bank National Marine Sanctuary Soundscape Report"
date: "today"
output: 
  html_document: 
    fig_caption: true
editor_options: 
  markdown: 
    wrap: 72
---

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Where are we listening?
```{python}
#| echo: false
display(HTML(standardTextDict["SBNMS"]))
```

### Summary of ocean sound monitoring sites
```{python}
#| echo: false
display(HTML(htmlTable))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Ocean Sound Conditions
```{python}
#| echo: false
display(HTML(standardTextDict["conditions overview"]))
```

### What are the seasonal patterns across frequencies?
```{python}
#| echo: false
display(HTML(standardTextDict["Soundscape Overview"]))
display(HTML(gf.makeButtons(sites, "plot_***_SeasonalSPL.jpg", "Seasons")))
infoHtml = f'''
                <button style="background-color: #FFFFFF;" onclick="document.getElementById(&#39;infoModal&#39;).showModal()">How was this calculated?</button>
            <dialog id="infoModal">
                <p>{standardTextDict['How was this calculated?']}</p>
                <button style="background-color: #FFFFFF;" onclick="document.getElementById(&#39;infoModal&#39;).close()">
                    Close
                </button>
            </dialog>
                <button style="background-color: #FFFFFF;" onclick="document.getElementById(&#39;infoModal2&#39;).showModal()">
                    How does my sanctuary compare?
                </button>
            <dialog id="infoModal2">
                <p>{standardTextDict['How does my sanctuary compare?']}</p>
                <button style="background-color: #FFFFFF;" onclick="document.getElementById(&#39;infoModal2&#39;).close()">
                    Close
                </button>
            </dialog>
'''
display(HTML(infoHtml))
```

### How are ocean sound conditions changing across years?
```{python}
#| echo: false
display(HTML(standardTextDict["What are the latest conditions in ocean sound?"]))
display(HTML(gf.makeButtons(sites, "plot_***_YearSPL.jpg", "YearSPL")))

```

### How often are sources of interest likely present?
#### (e.g. vocalizing species or human activity)
```{python}
#| echo: false
display(HTML(standardTextDict["sources of interest likely present"]))
display(HTML(gf.makeButtons(sites, "plot_***_AboveWind.jpg", "SourcePresent")))
```

### Are sounds of interest within typical range?
```{python}
#| echo: false
display(HTML(standardTextDict["sources of interest typical"]))
display(HTML(gf.makeButtons(sites, "plot_***-125_status.jpg", "FOI")))
```
:::

::: {style="border: 1px solid black; padding: 10px; margin-bottom: 20px;"}
## Ocean Sound Indicators
```{python}
#| echo: false
display(HTML(standardTextDict["Indicator description"]))
```

### How much noise from large vessels may be interfering with whale communication?
```{python}
#| echo: false
display(HTML(standardTextDict["large vessels interfer"]))
display(HTML(gf.makeButtons(sites, "plot_***_AISMonthAbove.jpg", "SoundLevelVariance"))) 
# NEED TO ADD BUTTON: "See Table Results" table_***_AISMonthAbove.jpg
```
#### How does the level of traffic change conditions?
```{python}
#| echo: false
display(HTML(standardTextDict["level of traffic"]))
display(HTML(gf.makeButtons(sites, "plot_***_AIShist.jpg", "Histogram")))
# NEED TO ADD BUTTON: "See Table Results" table_***_AIShist.jpg
```

### When do right whales contribute to the soundscape, indicating their presence nearby?
```{python}
#| echo: false
display(HTML(standardTextDict["North Atlantic Right whales"]))
#display(HTML(gf.embedMapViewer("https://apps-nefsc.fisheries.noaa.gov/pacm/#/narw")))
```
:::

